apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "proxysql-cluster.fullname" . }}-leader
  labels:
    {{- include "proxysql-cluster.labels" . | nindent 4 }}
    app.kubernetes.io/component: leader
spec:
  replicas: {{ .Values.replicaCount.leader }}
  selector:
    matchLabels:
      {{- include "proxysql-cluster.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: leader
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        {{- include "proxysql-cluster.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: leader
    spec:
      serviceAccountName: {{ include "proxysql-cluster.serviceAccountName" . }}
      restartPolicy: Always
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: proxysql
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
          - name: proxysql-leader-config
            mountPath: /etc/proxysql.cnf
            subPath: proxysql.cnf
          - name: proxysql-data
            mountPath: /var/lib/proxysql
          ports:
          - containerPort: {{ .Values.tcpPort.proxysqlCluster }}
            name: proxysql-mysql
          - containerPort: {{ .Values.tcpPort.proxysqlAdmin }}
            name: proxysql-admin
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        - name: configuration-loader
          args:
          - /bin/sh
          - -c
          - |-
            while :; do
              echo Attempting to reload the configuration...
              echo \
                'LOAD ADMIN VARIABLES TO RUNTIME;' \
                'LOAD MYSQL QUERY RULES TO RUNTIME;' \
                'LOAD MYSQL SERVERS TO RUNTIME;' \
                'LOAD PROXYSQL SERVERS TO RUNTIME;' \
              | mysql
              if [ ${?} -eq 0 ]; then
                sleep 3600
              else
                sleep 5
              fi
            done
          image: mysql
          stdin: true
          stdinOnce: true
          volumeMounts:
          - mountPath: /root/.my.cnf
            subPath: .my.cnf
            name: mysql-configuration
            readOnly: true
      volumes:
        - name: proxysql-leader-config
          secret:
            secretName: {{ include "proxysql-cluster.fullname" . }}-leader-configuration
        - name: mysql-configuration
          secret:
            secretName: {{ include "proxysql-cluster.fullname" . }}-my-cnf
        - name: proxysql-data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (printf "%s-leader-data" (include "proxysql-cluster.fullname" .)) }}
          {{- else }}
          emptyDir: {}
          {{- end }}
